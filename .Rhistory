#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
#' Convertit une chaîne de caractères au format "XXX+YYY" en numérique
#'
#' Cette fonction prend une chaîne de caractères représentant un nombre au format "XXX+YYY",
#' où "XXX" et "YYY" sont des chaînes représentant des nombres entiers, et convertit cette chaîne
#' en une valeur numérique en additionnant XXX à YYY/1000.
#'
#' @param X Une chaîne de caractères au format "XXX+YYY".
#' @return Un nombre numérique résultant de l'addition de XXX et YYY/1000.
#' Si la chaîne n'est pas dans le format correct, la fonction renvoie `NULL` avec un message d'erreur.
#' @examples
#' convertir_X_en_numerique("115+161")
#' convertir_X_en_numerique("003+045")
#' @export
convertir_X_en_numerique <- function(X) {
if (!grepl("^\\d+\\+\\d{1,3}$", X)) {
stop("Le format de la chaîne doit être 'XXX+YYY', où XXX est un nombre et YYY est un nombre de maximum 3 chiffres.")
}
parties <- strsplit(X, "\\+")[[1]]
part1 <- as.numeric(parties[1])
part2 <- as.numeric(parties[2])
if (is.na(part1) || is.na(part2)) {
stop("Erreur lors de la conversion en numérique.")
}
return(part1 + part2 / 1000)
}
convertir_X_en_numerique("ZEE+ZEZ")
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'
#' Convertit une chaîne de caractères au format "XXX+YYY" en numérique
#'
#' Cette fonction prend une chaîne de caractères représentant un nombre au format "XXX+YYY",
#' où "XXX" et "YYY" sont des chaînes représentant des nombres entiers, et convertit cette chaîne
#' en une valeur numérique en additionnant XXX à YYY/1000.
#'
#' @param X Une chaîne de caractères au format "XXX+YYY".
#' @return Un nombre numérique résultant de l'addition de XXX et YYY/1000.
#' Si la chaîne n'est pas dans le format correct, la fonction renvoi Le format de la chaîne doit être 'XXX+YYY', où XXX est un nombre et YYY est un nombre de maximum 3 chiffres.
#' @examples
#' convertir_X_en_numerique("115+161")
#' convertir_X_en_numerique("003+045")
#' @export
convertir_X_en_numerique <- function(X) {
if (!grepl("^\\d+\\+\\d{1,3}$", X)) {
stop("Le format de la chaîne doit être 'XXX+YYY', où XXX est un nombre et YYY est un nombre de maximum 3 chiffres.")
}
parties <- strsplit(X, "\\+")[[1]]
part1 <- as.numeric(parties[1])
part2 <- as.numeric(parties[2])
if (is.na(part1) || is.na(part2)) {
stop("Erreur lors de la conversion en numérique.")
}
return(part1 + part2 / 1000)
}
library(convertisseur)
library(convertisseur)
convertir_X_en_numerique("250+653")
convertisseur::convertir_X_en_numerique(125+653)
convertisseur::convertir_X_en_numerique("125+653")
#' Convertit une chaîne de caractères au format "XXX+YYY" en numérique
#'
#' Cette fonction prend une chaîne de caractères représentant un nombre au format "XXX+YYY",
#' où "XXX" et "YYY" sont des chaînes représentant des nombres entiers, et convertit cette chaîne
#' en une valeur numérique en additionnant XXX à YYY/1000.
#'
#' @param X Une chaîne de caractères au format "XXX+YYY".
#' @return Un nombre numérique résultant de l'addition de XXX et YYY/1000.
#' Si la chaîne n'est pas dans le format correct, la fonction renvoie une erreur.
#' Le format de la chaîne doit être 'XXX+YYY', où XXX est un nombre et YYY est un nombre de maximum 3 chiffres.
#' @examples
#' convertir_X_en_numerique("115+161")
#' convertir_X_en_numerique("003+045")
#' @export
convertir_X_en_numerique <- function(X) {
if (!grepl("^\\d+\\+\\d{1,3}$", X)) {
stop("Le format de la chaîne doit être 'XXX+YYY', où XXX est un nombre et YYY est un nombre de maximum 3 chiffres.")
}
parties <- strsplit(X, "\\+")[[1]]
part1 <- as.numeric(parties[1])
part2 <- as.numeric(parties[2])
if (is.na(part1) || is.na(part2)) {
stop("Erreur lors de la conversion en numérique.")
}
return(part1 + part2 / 1000)
}
install.packages("devtools")
library(devtools)
?convertisseur.Rd
?convertisseur.Rd
library(devtools)
devtools::load_all(".")
?convertisseur
devtools::load_all(".")
?convertisseur
library(convertisseur)
convertisseur::convertir_X_en_numerique(156)
convertisseur::convertir_X_en_numerique("566+665")
devtools::load_all(".")
?convertisseure
?convertisseure.Rd
?convertisseur.Rd
?convertisseur.Rd
devtools::check()
library(convertisseur)
convertisseur::convertir_X_en_numerique("1213+6565")
